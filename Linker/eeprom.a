;#include <mega128a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <stdint.h>
;#include <delay.h>
;#include <string.h>
;#include <uart.h>
;#include <int_protocol.h>
;#include <debug.h>
;
;uint8_t Eaddress        = 5;

	.DSEG
;
;void EEPROM_write(unsigned int uiAddress, unsigned char ucData){
; 0008 000C void EEPROM_write(unsigned int uiAddress, unsigned char ucData){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0008 000D     while(EECR & (1<<EEWE))
;PCODE: $0000000F VOL: 0
;	uiAddress -> Y+1
;	ucData -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0008 000E     ;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0008 000F     EEAR = uiAddress;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0008 0010     EEDR = ucData;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0008 0011     EECR |= (1<<EEMWE);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0008 0012     EECR |= (1<<EEWE);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0008 0013 }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;
;unsigned char EEPROM_read(unsigned int uiAddress){
; 0008 0016 unsigned char EEPROM_read(unsigned int uiAddress){
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0008 0017     while(EECR & (1<<EEWE))
;PCODE: $00000023 VOL: 0
;	uiAddress -> Y+0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0008 0018     ;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0008 0019     EEAR = uiAddress;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0008 001A     EECR |= (1<<EERE);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0008 001B     return EEDR;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0008 001C }
;PCODE: $00000031 VOL: 0
;
;
